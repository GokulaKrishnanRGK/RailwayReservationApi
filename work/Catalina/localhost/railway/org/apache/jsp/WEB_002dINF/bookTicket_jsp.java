/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.48
 * Generated at: 2021-07-08 11:17:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class bookTicket_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jakarta.servlet.jsp.jstl-1.2.6.jar", Long.valueOf(1625158388318L));
    _jspx_dependants.put("jar:file:/C:/Users/Gokulakrishnan/Desktop/ZOHOIncubation/Tasks/railwayServletCopy/tomcat/webapps/railway/WEB-INF/lib/jakarta.servlet.jsp.jstl-1.2.6.jar!/META-INF/c.tld", Long.valueOf(1548327066000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("    <html>\r\n");
      out.write("\r\n");
      out.write("    <head>\r\n");
      out.write("        <title>Railway Reservation</title>\r\n");
      out.write("        <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("        <style>\r\n");
      out.write("            .topnav {\r\n");
      out.write("                overflow: hidden;\r\n");
      out.write("                background-color: #333;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .topnav a {\r\n");
      out.write("                float: left;\r\n");
      out.write("                color: #f2f2f2;\r\n");
      out.write("                text-align: center;\r\n");
      out.write("                padding: 14px 16px;\r\n");
      out.write("                text-decoration: none;\r\n");
      out.write("                font-size: 17px;\r\n");
      out.write("                float: right;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .topnav a:hover {\r\n");
      out.write("                background-color: #ddd;\r\n");
      out.write("                color: black;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .topnav a.active {\r\n");
      out.write("                background-color: #04AA6D;\r\n");
      out.write("                color: white;\r\n");
      out.write("            }\r\n");
      out.write("        </style>\r\n");
      out.write("    </head>\r\n");
      out.write("\r\n");
      out.write("    <body>\r\n");
      out.write("        <div class=\"topnav\">\r\n");
      out.write("            <a href=\"/railway/logout.jsp\">Logout</a>\r\n");
      out.write("            <a href=\"/railway/user/dashboard\">Booking Details</a>\r\n");
      out.write("            <a href=\"/railway/user/cancel\">Cancel Ticket</a>\r\n");
      out.write("            <a class=\"active\">Book Ticket</a>\r\n");
      out.write("        </div>\r\n");
      out.write("        <center>\r\n");
      out.write("            <h1>Railway Reservation</h1><br>\r\n");
      out.write("            <!-- <label id=\"welcomeLabel\" value='");
      out.print( session.getAttribute("name") );
      out.write("'></label> -->\r\n");
      out.write("            <label id=\"welcomeLabel\">Welcome!</label>\r\n");
      out.write("            <h2>Book Tickets</h2>\r\n");
      out.write("            <table>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td><label>From</label></td>\r\n");
      out.write("                    <td><input type=\"text\" id=\"from\" placeholder=\"From\" /></td>\r\n");
      out.write("                    <td><label>To</label></td>\r\n");
      out.write("                    <td><input type=\"text\" id=\"to\" placeholder=\"To\" /></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("            </table><br>\r\n");
      out.write("            <div id=\"ticketsListDiv\">\r\n");
      out.write("                <table border=\"1\" cellpadding=\"10\">\r\n");
      out.write("                    <thead>\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <th>#</th>\r\n");
      out.write("                            <th>Class Name</th>\r\n");
      out.write("                            <th>Available</th>\r\n");
      out.write("                            <th>Waiting</th>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                    </thead>\r\n");
      out.write("                    <tbody>\r\n");
      out.write("                        ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                    </tbody>\r\n");
      out.write("                </table>\r\n");
      out.write("            </div>\r\n");
      out.write("            <br>\r\n");
      out.write("            <div id=\"passengerDiv\"></div>\r\n");
      out.write("            <input type=\"button\" onclick=\"bookTickets()\" value=\"Book Tickets\" /><br>\r\n");
      out.write("            <label id=\"errorMessage\"></label>\r\n");
      out.write("        </center>\r\n");
      out.write("    </body>\r\n");
      out.write("    <script>\r\n");
      out.write("        var isClicked = false;\r\n");
      out.write("\r\n");
      out.write("        function bookTickets() {\r\n");
      out.write("            var from = document.getElementById(\"from\").value;\r\n");
      out.write("            var to = document.getElementById(\"to\").value;\r\n");
      out.write("            if (from == \"\" || to == \"\" || from == to) {\r\n");
      out.write("                document.getElementById(\"errorMessage\").innerHTML = \"From and To should not be null or the same <br><br>\";\r\n");
      out.write("                document.getElementById(\"errorMessage\").setAttribute(\"style\", \"color:red\");\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("            var classId = $(\"input[name=classChoice]:checked\").val();\r\n");
      out.write("            var json = {};\r\n");
      out.write("            json[\"from\"] = from;\r\n");
      out.write("            json[\"to\"] = to;\r\n");
      out.write("            json[\"classId\"] = classId;\r\n");
      out.write("            var otArr = [];\r\n");
      out.write("            var isValid = true;\r\n");
      out.write("            var tbl2 = $('#passengerTable tr').each(function(i) {\r\n");
      out.write("                if (i > 0) {\r\n");
      out.write("                    x = $(this).children();\r\n");
      out.write("                    var itArr = [];\r\n");
      out.write("                    var name = x.children().eq(0).val();\r\n");
      out.write("                    var age = x.children().eq(1).val();\r\n");
      out.write("                    var gender = x.children().eq(2).val();\r\n");
      out.write("                    console.log(name);\r\n");
      out.write("                    console.log(age);\r\n");
      out.write("                    console.log(gender);\r\n");
      out.write("                    if (name == \"\" || age == \"\" || gender == \"select\") {\r\n");
      out.write("                        document.getElementById(\"errorMessage\").innerHTML = \"Invalid Passenger details <br><br>\";\r\n");
      out.write("                        document.getElementById(\"errorMessage\").setAttribute(\"style\", \"color:red\");\r\n");
      out.write("                        isValid = false;\r\n");
      out.write("                        return;\r\n");
      out.write("                    }\r\n");
      out.write("                    itArr.push(name)\r\n");
      out.write("                    itArr.push(age)\r\n");
      out.write("                    itArr.push(gender)\r\n");
      out.write("                    otArr.push(itArr);\r\n");
      out.write("                }\r\n");
      out.write("            })\r\n");
      out.write("            if (!isValid) {\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("            if (otArr.length == 0) {\r\n");
      out.write("                document.getElementById(\"errorMessage\").innerHTML = \"Add atleast 1 passenger <br><br>\";\r\n");
      out.write("                document.getElementById(\"errorMessage\").setAttribute(\"style\", \"color:red\");\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("            json[\"tickets\"] = otArr;\r\n");
      out.write("            console.log(json);\r\n");
      out.write("            document.getElementById(\"errorMessage\").innerHTML = \"Processing... <br><br>\";\r\n");
      out.write("            document.getElementById(\"errorMessage\").setAttribute(\"style\", \"color:black\");\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                url: '/railway/user/tickets',\r\n");
      out.write("                type: 'post',\r\n");
      out.write("                dataType: 'json',\r\n");
      out.write("                contentType: 'application/json',\r\n");
      out.write("                async: false,\r\n");
      out.write("                success: function(data) {\r\n");
      out.write("                    if (data == \"1\") {\r\n");
      out.write("                        document.getElementById(\"errorMessage\").innerHTML = \"Tickets Booked Successfully! Ticket Details Mailed!<br><br>\";\r\n");
      out.write("                        document.getElementById(\"errorMessage\").setAttribute(\"style\", \"color:green\");\r\n");
      out.write("                        setTimeout(function() {\r\n");
      out.write("                            window.location.href = 'tickets';\r\n");
      out.write("                        }, 3000);\r\n");
      out.write("                    }\r\n");
      out.write("                },\r\n");
      out.write("                error: function(data) {\r\n");
      out.write("                    document.getElementById(\"errorMessage\").innerHTML = \"Booking unsuccessfully! <br><br>\";\r\n");
      out.write("                    document.getElementById(\"errorMessage\").setAttribute(\"style\", \"color:red\");\r\n");
      out.write("                },\r\n");
      out.write("                data: JSON.stringify(json)\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function addTable() {\r\n");
      out.write("            if (!isClicked) {\r\n");
      out.write("                var passengerDiv = $(\"#passengerDiv\");\r\n");
      out.write("                var table = $('<table cellpadding=\"10\" id=\"passengerTable\"><tr><th></th><th>Name</th><th>Age</th><th>Gender</th><th><input type=\"button\" onclick=\"addPassenger()\" value=\"Add Passenger\" /><br></th></tr></table>');\r\n");
      out.write("                passengerDiv.append(table);\r\n");
      out.write("                addPassenger();\r\n");
      out.write("                isClicked = true;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function addPassenger() {\r\n");
      out.write("            var passengerTable = $(\"#passengerTable\");\r\n");
      out.write("            var row = $('<tr><td></td><td><input type=\"text\" placeholder=\"Name\" name=\"name\"/></td> <td><input type=\"number\" placeholder=\"Age\" name=\"age\"/> </td> <td> </td> <td></td></tr>');\r\n");
      out.write("            var gender = $('<select name=\"gender\"><option value=\"select\">Select</option><option value=\"Male\">Male</option><option value=\"Female\">Female</option><option value=\"Other\">Other</option></select>');\r\n");
      out.write("            var remove = $('<input type=\"button\" class=\"remove\" onclick=\"removePassenger(this)\" value=\"Remove\"/>')\r\n");
      out.write("            row.children().eq(3).append(gender);\r\n");
      out.write("            row.children().eq(4).append(remove);\r\n");
      out.write("            row.appendTo(passengerTable);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function removePassenger(btn) {\r\n");
      out.write("            console.log(\"Here\")\r\n");
      out.write("            $(btn).closest('tr').remove();\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("    </html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/bookTicket.jsp(67,24) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("ticket");
      // /WEB-INF/bookTicket.jsp(67,24) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/bookTicket.jsp(67,24) '${tickets}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${tickets}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("                            <tr>\r\n");
            out.write("                                <td><input type='radio' name='classChoice' value=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ticket.classId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(" onclick=\"addTable()\" /></td>\r\n");
            out.write("                                <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ticket.className}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("                                <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ticket.available}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("                                <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ticket.waiting}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("                            </tr>\r\n");
            out.write("                        ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
