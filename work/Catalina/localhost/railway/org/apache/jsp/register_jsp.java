/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.48
 * Generated at: 2021-07-08 08:40:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Railway Reservation</title>\r\n");
      out.write("    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("    <center>\r\n");
      out.write("        <h1>Railway Reservation</h1>\r\n");
      out.write("        <h1>Registration Page</h1>\r\n");
      out.write("        <form id=\"registerForm\" method=\"post\">\r\n");
      out.write("            <table>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td><label>Email Id: </label></td>\r\n");
      out.write("                    <td><input type=\"email\" name=\"userid\" id=\"email\" required /></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td><label>Name: </label></td>\r\n");
      out.write("                    <td><input type=\"text\" name=\"name\" id=\"name\" required /></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td><label>Phone No.: </label></td>\r\n");
      out.write("                    <td><input type=\"phoneno\" name=\"phoneno\" id=\"phoneno\" pattern=\"[0-9]{10}\" required /></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td><label>DOB: </label></td>\r\n");
      out.write("                    <td><input type=\"date\" name=\"date\" id=\"dob\" required /></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td><label>Password: </label></td>\r\n");
      out.write("                    <td><input type=\"password\" name=\"password\" id=\"password\" required /></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td><label>Retype Password: </label></td>\r\n");
      out.write("                    <td><input type=\"password\" id=\"repassword\" required /><br></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("            </table>\r\n");
      out.write("            <input type=\"submit\" value=\"Submit\"><br>\r\n");
      out.write("            <input type=\"button\" onclick=\"location.href='/railway/logout.jsp';\" value=\"Go Back\" />\r\n");
      out.write("            <label id=\"errorMessage\"></label>\r\n");
      out.write("        </form>\r\n");
      out.write("    </center>\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("    const form = document.querySelector('#registerForm');\r\n");
      out.write("    var date = new Date();\r\n");
      out.write("    date.setDate(date.getDate() - 1);\r\n");
      out.write("    var today = date.toISOString().split('T')[0];\r\n");
      out.write("    document.getElementById(\"dob\").setAttribute('max', today);\r\n");
      out.write("\r\n");
      out.write("    form.addEventListener('submit', (event) => {\r\n");
      out.write("        console.log(\"here\");\r\n");
      out.write("        // disable default action\r\n");
      out.write("        event.preventDefault();\r\n");
      out.write("        var userid = document.getElementById(\"registerForm\").elements[\"userid\"].value;\r\n");
      out.write("        var name = document.getElementById(\"registerForm\").elements[\"name\"].value;\r\n");
      out.write("        var phoneno = document.getElementById(\"registerForm\").elements[\"phoneno\"].value;\r\n");
      out.write("        var dob = document.getElementById(\"registerForm\").elements[\"date\"].value;\r\n");
      out.write("        var password = document.getElementById(\"registerForm\").elements[\"password\"].value;\r\n");
      out.write("        var repassword = document.getElementById(\"registerForm\").elements[\"repassword\"].value;\r\n");
      out.write("        if (password != repassword) {\r\n");
      out.write("            document.getElementById(\"errorMessage\").innerHTML = \"Passwords must match!\";\r\n");
      out.write("            document.getElementById(\"errorMessage\").setAttribute(\"style\", \"color:red\");\r\n");
      out.write("            return;\r\n");
      out.write("        }\r\n");
      out.write("        // var result=isUserExist(userid);        \r\n");
      out.write("        // if(result){\r\n");
      out.write("        //     console.log(\"Here2\");\r\n");
      out.write("        //     document.getElementById(\"errorMessage\").innerHTML = \"User Exists!\";\r\n");
      out.write("        //     return;\r\n");
      out.write("        // }\r\n");
      out.write("        const json = {\r\n");
      out.write("            \"userid\": userid,\r\n");
      out.write("            \"name\": name,\r\n");
      out.write("            \"phoneno\": phoneno,\r\n");
      out.write("            \"dob\": dob,\r\n");
      out.write("            \"password\": password\r\n");
      out.write("        };\r\n");
      out.write("        var result = registerUser(json);\r\n");
      out.write("\r\n");
      out.write("        if (result == \"1\") {\r\n");
      out.write("            document.getElementById(\"errorMessage\").innerHTML = \"Registration Successful! <br> Redirecting to login...<br>\";\r\n");
      out.write("            document.getElementById(\"errorMessage\").setAttribute(\"style\", \"color:green\");\r\n");
      out.write("            setTimeout(function() {\r\n");
      out.write("                window.location.href = '/railway/logout.jsp';\r\n");
      out.write("            }, 3000);\r\n");
      out.write("        } else if (result == \"0\") {\r\n");
      out.write("            document.getElementById(\"errorMessage\").innerHTML = \"User Exists!\";\r\n");
      out.write("            document.getElementById(\"errorMessage\").setAttribute(\"style\", \"color:red\");\r\n");
      out.write("        } else if (result == \"-1\") {\r\n");
      out.write("            document.getElementById(\"errorMessage\").innerHTML = \"Error occured!\";\r\n");
      out.write("            document.getElementById(\"errorMessage\").setAttribute(\"style\", \"color:red\");\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    function registerUser(json) {\r\n");
      out.write("        var result;\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            url: '/railway/register',\r\n");
      out.write("            type: 'post',\r\n");
      out.write("            dataType: 'json',\r\n");
      out.write("            contentType: 'application/json',\r\n");
      out.write("            async: false,\r\n");
      out.write("            success: function(data) {\r\n");
      out.write("                result = data;\r\n");
      out.write("            },\r\n");
      out.write("            data: JSON.stringify(json)\r\n");
      out.write("        });\r\n");
      out.write("        return result;\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
